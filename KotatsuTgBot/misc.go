package main

import (
	//–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–∞–∫–µ—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
	"rr/kotatsutgbot/db"

	//–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
	"fmt"
	"math/rand"
	"strings"
)

// ===================================================================
//
//	CREATE
//
// ===================================================================
// –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func regUser(user_tg_id int64, full_tg_name string, user_name string) int {
	user_to_add := db.User_CreateJSON{
		UserTgID:   user_tg_id,
		UserName:   user_name,
		FullTgName: full_tg_name,
	}

	db_answer_code := db.DB_CREATE_User(&user_to_add)
	return db_answer_code
}

// ===================================================================
//
//	MISC
//
// ===================================================================

// –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
func GetProfileTgURL(username string) string {
	if username != "" {
		profileURL := fmt.Sprintf("https://t.me/%s", username)
		return profileURL
	} else {
		return ""
	}
}

func splitName(input string) (user1, user2, user3 string) {
	words := strings.Fields(input) // –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ —Å–ª–æ–≤–∞

	if len(words) >= 3 {
		user1 = words[0]
		user2 = words[1]
		user3 = words[2]
	} else if len(words) == 2 {
		user1 = words[0]
		user2 = words[1]
		user3 = ""
	} else if len(words) == 1 {
		user1 = words[0]
		user2 = ""
		user3 = ""
	}

	return user1, user2, user3
}

// func UpdateBotApply(bot *tgbotapi.BotAPI) {
// 	var list_users []db.User
// 	msg := tgbotapi.NewMessage(0, "")
// 	var message_text, message_text_club string

// 	user := new(db.User)
// 	list_users, error_code, _ := user.GetManyRecordsFromDB()

// 	message_text = "üîÑ –í—ã—à–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞! üîÑ" + "\n" + "\n" +
// 		"–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞" + "\n" +
// 		"–£–ª—É—á—à–µ–Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã"

// 	message_text_club = "üîÑ –í—ã—à–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞! üîÑ" + "\n" + "\n" +
// 		"–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞" + "\n" +
// 		"–£–ª—É—á—à–µ–Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã" + "\n" +
// 		"–í –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª 'ü§ù –ê–∫—Ü–∏–∏ –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—ã'"

// 	switch error_code {
// 	case db.ERROR_OK:
// 		for _, user := range list_users {
// 			msg.ChatID = user.UserTgID

// 			if user.IsClubMember {
// 				msg.Text = message_text_club
// 				msg.ReplyMarkup = keyboards.MainMenuButtonsReg
// 			} else {
// 				msg.Text = message_text
// 			}

// 			_, err := bot.Send(msg)
// 			if err != nil {
// 				rr_debug.PrintLOG("misc.go", "UpdateBotApply", "bot.Send", "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è", err.Error())
// 			}
// 		}
// 	}
// 	fmt.Println("UPDATE SUCCESS!!!")
// }

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
func generateRandomNumber(digits int) int {
	min := int64(1)
	max := int64(1)

	// –í—ã—á–∏—Å–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ü–∏—Ñ—Ä
	for i := 0; i < digits-1; i++ {
		min *= 10
		max *= 10
	}

	max = max*10 - 1

	// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
	randomValue := rand.Int63n(max-min+1) + min

	return int(randomValue)
}
